name: Build and publish

on:
  push:
    tags:
     - 'v**'
jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    
      - uses: nowsprinting/check-version-format-action@v3
        id: version
        with:
          prefix: 'v'

      - name: Check valid tag format
        if: steps.version.outputs.is_valid == 'false'
        run: exit 1

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v5.2
        with: 
          strip_tag_prefix: v

      - name: Get the current tag
        if: steps.branch-name.outputs.is_tag == 'true'  # Replaces: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "tag: ${{ steps.branch-name.outputs.tag }}"
          echo "current_branch: ${{ steps.branch-name.outputs.current_branch }}"
          echo "ref_branch: ${{ steps.branch-name.outputs.ref_branch }}"

      - name: Check valid branch
        if: ${{ !startsWith(steps.branch-name.outputs.tag, '2.2') && !startsWith(steps.branch-name.outputs.tag, '2.1')  }}
        run: exit 1

      # checkout branch 2.2
      - uses: actions/checkout@v2
        if: ${{ startsWith(steps.branch-name.outputs.tag, '2.2') }}
        with: 
          ref: '2.2'
      
      # checkout branch 2.1
      - uses: actions/checkout@v2
        if: ${{ startsWith(steps.branch-name.outputs.tag, '2.1') }} 
        with: 
          ref: '2.1'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - name: Lerna version
        run: |
          lerna version ${{ steps.branch-name.outputs.tag }} --no-git-tag-version --force-publish --exact --yes

      - run: yarn --frozen-lockfile

      - name: Bootstrap platform
        run: |
          yarn bootstrap

      - name: Build platform
        env:
          CI: false
        run: |
          npx browserslist@latest --update-db
          npm install -g mkdirp
          yarn build

      - name: Create commits & Push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add . 
          git commit -m "action: release ${{ steps.branch-name.outputs.tag }}"
          git push

      - name: Lerna publish latest
        if: ${{ startsWith(steps.branch-name.outputs.tag, '2.1') }}
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
          lerna publish from-package --yes
        env:
          CI: false
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      
      - name: Lerna publish next
        if: ${{ startsWith(steps.branch-name.outputs.tag, '2.2') }}
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
          lerna publish from-package --yes --dist-tag next
        env:
          CI: false
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          
      - name: Update master branch
        if: ${{ startsWith(steps.branch-name.outputs.tag, '2.2') }}
        run: |
          git checkout master
          git merge 2.2
          git push origin 
        
      - name: Create Docker Release
        if: steps.version.outputs.is_stable == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          owner: steedos
          repo: docker
          tag_name: v${{ steps.branch-name.outputs.tag }}
          release_name: Release v${{ steps.branch-name.outputs.tag }}
          draft: false
          prerelease: false
