{"version":3,"sources":["meteor://ðŸ’»app/app/cors/server/cors.coffee"],"names":["cors","require","WebApp","rawConnectHandlers","use","req","res","next","buf","ref","_body","headers","isNaN","setEncoding","on","chunk","err","Steedos","debugLevel","console","log","green","method","url","body","JSON","parse","error","origin","credentials","setHeader","toUpperCase","key","val","toLowerCase","apply","arguments"],"mappings":";;;;;;;;;AACA,IAAAA,IAAA;AAAAA,OAAOC,QAAQ,MAAR,CAAP;AAGAC,OAAOC,kBAAP,CAA0BC,GAA1B,CAA8B,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX;AAC7B,MAAAC,GAAA,EAAAC,GAAA;;AAAA,MAAGJ,IAAIK,KAAP;AACC,WAAOH,MAAP;AAEC;;AAAF,MAAGF,IAAIM,OAAJ,CAAY,mBAAZ,MAAoC,MAApC,IAAkDC,MAAMP,IAAIM,OAAJ,CAAY,gBAAZ,CAAN,CAArD;AACC,WAAOJ,MAAP;AAEC;;AAAF,OAAAE,MAAGJ,IAAIM,OAAJ,CAAY,cAAZ,CAAH,MAAuC,EAAvC,IAAGF,QAAwC,MAA3C;AACC,WAAOF,MAAP;AAEC;;AAAFC,QAAM,EAAN;AACAH,MAAIQ,WAAJ,CAAgB,MAAhB;AACAR,MAAIS,EAAJ,CAAO,MAAP,EAAe,UAACC,KAAD;AAEZ,WAFuBP,OAAOO,KAE9B;AAFH;AAIC,SAHDV,IAAIS,EAAJ,CAAO,KAAP,EAAc;AACb,QAAAE,GAAA;;AAAA,QAAG,QAAAC,OAAA,oBAAAA,YAAA,OAAAA,QAAAC,UAAA,sBAAyBD,QAAQC,UAAR,KAAsB,OAAlD;AACCC,cAAQC,GAAR,CAAY,YAAYC,KAAxB,EAA+BhB,IAAIiB,MAAnC,EAA2CjB,IAAIkB,GAA/C,EAAoD,cAApD,EAAoElB,IAAIM,OAAxE,EAAiF,WAAjF,EAA8FH,GAA9F;AAKE;;AAHH;AACCH,UAAImB,IAAJ,GAAWC,KAAKC,KAAL,CAAWlB,GAAX,CAAX;AADD,aAAAmB,KAAA;AAEMX,YAAAW,KAAA;AACLtB,UAAImB,IAAJ,GAAWhB,GAAX;AAME;;AAJHH,QAAIK,KAAJ,GAAY,IAAZ;AAME,WALFH,MAKE;AAfH,IAGC;AAhBF;AAyBAL,OAAOC,kBAAP,CAA0BC,GAA1B,CAA8BJ,KAAK;AAAC4B,UAAQ,IAAT;AAAeC,eAAa;AAA5B,CAAL,CAA9B;AAEA3B,OAAOC,kBAAP,CAA0BC,GAA1B,CAA8B,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX;AAE7B,MAAAe,MAAA,EAAAQ,SAAA;AAAAR,WAASjB,IAAIiB,MAAJ,IAAcjB,IAAIiB,MAAJ,CAAWS,WAAzB,IAAwC1B,IAAIiB,MAAJ,CAAWS,WAAX,EAAjD;AAGAD,cAAYxB,IAAIwB,SAAhB;;AACAxB,MAAIwB,SAAJ,GAAgB,UAACE,GAAD,EAAMC,GAAN;AACf,QAAGD,IAAIE,WAAJ,OAAqB,6BAArB,IAAuDD,QAAO,qBAAjE;AACC;AASE;;AARH,WAAOH,UAAUK,KAAV,CAAgB,IAAhB,EAAmBC,SAAnB,CAAP;AAHe,GAAhB;;AAKA,SAAO7B,MAAP;AAXD,G","file":"/app.js","sourcesContent":["# Adding CORS headers so we can use CDNs for static content\r\ncors = require(\"cors\");\r\n\r\n# Try to parse all request bodies as JSON\r\nWebApp.rawConnectHandlers.use (req, res, next) ->\r\n\tif req._body\r\n\t\treturn next()\r\n\r\n\tif req.headers['transfer-encoding'] is undefined and isNaN(req.headers['content-length'])\r\n\t\treturn next()\r\n\r\n\tif req.headers['content-type'] not in ['', undefined]\r\n\t\treturn next()\r\n\r\n\tbuf = ''\r\n\treq.setEncoding('utf8')\r\n\treq.on 'data', (chunk) -> buf += chunk\r\n\treq.on 'end', ->\r\n\t\tif Steedos?.debugLevel? and Steedos.debugLevel is 'debug'\r\n\t\t\tconsole.log '[request]'.green, req.method, req.url, '\\nheaders ->', req.headers, '\\nbody ->', buf\r\n\r\n\t\ttry\r\n\t\t\treq.body = JSON.parse(buf)\r\n\t\tcatch err\r\n\t\t\treq.body = buf\r\n\r\n\t\treq._body = true\r\n\t\tnext()\r\n\r\nWebApp.rawConnectHandlers.use(cors({origin: true, credentials: true}));\r\n\r\nWebApp.rawConnectHandlers.use (req, res, next) ->\r\n\t#if /^\\/(api|_timesync|sockjs|tap-i18n)(\\/|$)/.test req.url\r\n\tmethod = req.method && req.method.toUpperCase && req.method.toUpperCase();\r\n\r\n\t# Block next handlers to override CORS with value http://meteor.local\r\n\tsetHeader = res.setHeader\r\n\tres.setHeader = (key, val) ->\r\n\t\tif key.toLowerCase() is 'access-control-allow-origin' and val is 'http://meteor.local'\r\n\t\t\treturn\r\n\t\treturn setHeader.apply @, arguments\r\n\r\n\treturn next()\r\n\r\n# _staticFilesMiddleware = WebAppInternals.staticFilesMiddleware\r\n# WebAppInternals._staticFilesMiddleware = (staticFiles, req, res, next) ->\r\n# \tres.setHeader(\"Access-Control-Allow-Origin\", \"*\")\r\n# \t_staticFilesMiddleware(staticFiles, req, res, next)\r\n\r\n\r\n"]}