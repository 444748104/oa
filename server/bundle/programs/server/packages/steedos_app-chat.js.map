{"version":3,"sources":["meteor://💻app/packages/steedos:app-chat/checkNpm.js","meteor://💻app/packages/steedos_app-chat/server/publications/chat_messages.coffee","meteor://💻app/server/publications/chat_messages.coffee","meteor://💻app/packages/steedos_app-chat/server/chat.socket.coffee","meteor://💻app/server/chat.socket.coffee"],"names":["checkNpmVersions","module","link","v","Meteor","publishComposite","space_id","object_name","record_id","options","data","query","self","unblock","find","Creator","getCollection","children","push","parent","e","owner","_id","fields","name","avatarUrl","error","console","log","reference_to","Fiber","PORT","SOCKETEVENTNAMES","SOCKETS","checkAuthToken","checkAuthTokenFiber","getReceiveSocketKey","http","receiveMessageSockets","receiveSubscriptionSockets","sendUnreadBadge","sendUnreadBadgeFiber","socketEmit","socket_io","require","process","env","SOCKET_IO_PORT","NEWMESSAGE","STOPNEWMESSAGE","RECEIVEMESSAGE","SUBSCRIPTIONS","STOPNEWSUBSCRIPTIONS","RECEIVESUBSCRIPTIONS","COUNTUNREAD","userId","authToken","hashedToken","user","Accounts","_hashLoginToken","wrapAsyncFindOne","db","users","socket","countUnread","unread","$gt","forEach","_r","run","check","Steedos","id","disconnect","eventname","emit","startup","chat_messages_init","chat_subscriptions_init","counter","io","sendNewMessage","sendSubscription","server","createServer","on","request","_query","res","key","listen","msg","participants","room","related_to","o","ids","length","findOne","members","_","m","p","$gte","Date","created_by","modified","modified_by","observe","added","newDocument","changed","oldDocument","removed","sub","_room","$in","fetch","$or"],"mappings":"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","file":"/packages/steedos_app-chat.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\r\ncheckNpmVersions({\r\n\t'socket.io': '>=1.4.8',\r\n\t// 'socket.io-client': \"^1.4.8\"\r\n}, 'steedos:app-chat');\r\n","Meteor.publishComposite 'chat_messages', (space_id, object_name, record_id, options)->\r\n\tquery = {'space': space_id,'related_to.o': object_name,'related_to.ids': record_id}\r\n\r\n\tself = this\r\n\r\n\tself.unblock();\r\n\r\n\tdata = {\r\n\t\tfind: ()->\r\n\t\t\tself.unblock();\r\n\r\n\t\t\treturn Creator.getCollection(\"chat_messages\").find(query, options);\r\n\t}\r\n\r\n\tdata.children = []\r\n\r\n\tdata.children.push {\r\n\t\tfind: (parent) ->\r\n\t\t\ttry\r\n\t\t\t\tself.unblock();\r\n\t\t\t\tif parent?.owner\r\n\t\t\t\t\treturn Creator.getCollection(\"users\").find({_id: parent.owner}, {\r\n\t\t\t\t\t\tfields: {name: 1, avatarUrl: 1}\r\n\t\t\t\t\t});\r\n\t\t\t\telse\r\n\t\t\t\t\treturn []\r\n\t\t\tcatch e\r\n\t\t\t\tconsole.log(reference_to, parent, e)\r\n\t\t\t\treturn []\r\n\t}\r\n\r\n\treturn data","Meteor.publishComposite('chat_messages', function(space_id, object_name, record_id, options) {\n  var data, query, self;\n  query = {\n    'space': space_id,\n    'related_to.o': object_name,\n    'related_to.ids': record_id\n  };\n  self = this;\n  self.unblock();\n  data = {\n    find: function() {\n      self.unblock();\n      return Creator.getCollection(\"chat_messages\").find(query, options);\n    }\n  };\n  data.children = [];\n  data.children.push({\n    find: function(parent) {\n      var e;\n      try {\n        self.unblock();\n        if (parent != null ? parent.owner : void 0) {\n          return Creator.getCollection(\"users\").find({\n            _id: parent.owner\n          }, {\n            fields: {\n              name: 1,\n              avatarUrl: 1\n            }\n          });\n        } else {\n          return [];\n        }\n      } catch (error) {\n        e = error;\n        console.log(reference_to, parent, e);\n        return [];\n      }\n    }\n  });\n  return data;\n});\n","http = require 'http';\r\nsocket_io = require 'socket.io';\r\nFiber = require('fibers');\r\n\r\nif !process.env.SOCKET_IO_PORT\r\n\treturn;\r\n\r\nPORT = process.env.SOCKET_IO_PORT || 8080;\r\n\r\nSOCKETS = {}\r\n\r\n#接收消息的socket集合,key的格式为: {object_name}_{record_id}_{userId}, 值为socket 对象, 目前不支持一个用户多个socket接入\r\nreceiveMessageSockets = {\r\n\r\n}\r\n\r\nreceiveSubscriptionSockets = {\r\n\r\n}\r\n\r\nSOCKETEVENTNAMES = {\r\n\tNEWMESSAGE: 'new message',\r\n\tSTOPNEWMESSAGE: 'stop message',\r\n\tRECEIVEMESSAGE: 'receive message',\r\n\tSUBSCRIPTIONS: 'subscriptions',\r\n\tSTOPNEWSUBSCRIPTIONS: 'stop subscriptions',\r\n\tRECEIVESUBSCRIPTIONS: 'receive subscriptions',\r\n\tCOUNTUNREAD: 'count unread'\r\n};\r\n\r\ncheckAuthToken = (userId, authToken) ->\r\n\tif userId and authToken\r\n\t\thashedToken = Accounts._hashLoginToken(authToken)\r\n\t\tuser = wrapAsyncFindOne(db.users, {\r\n\t\t\t\t_id: userId,\r\n\t\t\t\t\"services.resume.loginTokens.hashedToken\": hashedToken\r\n\t\t\t}\r\n\t\t)\r\n\t\tif user\r\n\t\t\treturn true\r\n\t\telse\r\n\t\t\treturn false\r\n\treturn false\r\n\r\n\r\ngetReceiveSocketKey = (object_name, record_id, userId)->\r\n\treturn \"#{object_name}_#{record_id}_#{userId}\"\r\n\r\nsendUnreadBadge = (socket, space_id, owner)->\r\n\tcountUnread = 0\r\n\tCreator.getCollection(\"chat_subscriptions\").find({\r\n\t\towner: owner,\r\n\t\tunread: {$gt: 0}\r\n\t}, {fields: {unread: 1}}).forEach (_r)->\r\n\t\tcountUnread += _r.unread\r\n\tsocketEmit(socket, SOCKETEVENTNAMES.COUNTUNREAD, countUnread);\r\n\r\n#使用Fiber用于处理错误:'Meteor code must always run within a Fiber' . 尝试了Meteor 提供的Meteor.bindEnvironment\\Meteor.wrapAsync都不能处理此错误.\r\nsendUnreadBadgeFiber = (socket, space_id, owner)->\r\n\tFiber(()->\r\n\t\tsendUnreadBadge(socket, space_id, owner);\r\n\t).run();\r\n\r\n#TODO: Fiber返回值问题处理\r\ncheckAuthTokenFiber = (socket, userId, authToken)->\r\n\tFiber(()->\r\n\t\tcheck = Steedos.checkAuthToken(userId, authToken);\r\n\t\tif(!check)\r\n\t\t\tSOCKETS[socket.id] = null;\r\n\t\t\tsocket.disconnect();\r\n\t).run();\r\n\r\nsocketEmit = (socket, eventname, data) ->\r\n\tif socket && SOCKETS[socket.id]\r\n\t\tsocket.emit(eventname, data)\r\n\r\nMeteor.startup ()->\r\n\tserver = http.createServer();\r\n\r\n\tio = socket_io(server);\r\n\r\n\tcounter = 0;\r\n\r\n\tio.on('connection', (socket)->\r\n\t\tquery = socket.request._query;\r\n\t\tuserId = query[\"X-User-Id\"]\r\n\t\tauthToken = query[\"X-Auth-Token\"]\r\n\r\n\t\tif !userId || !authToken\r\n\t\t\tsocket.disconnect();\r\n\t\t\treturn;\r\n\r\n\t\tcheckAuthTokenFiber(socket, userId, authToken)\r\n\r\n\t\tSOCKETS[socket.id] = socket;\r\n\r\n\t\t#销毁socket\r\n\t\tsocket.on 'disconnect', ()->\r\n\t\t\tquery = socket.request._query;\r\n\t\t\tuserId = query[\"X-User-Id\"]\r\n\t\t\tSOCKETS[socket.id] = null;\r\n\r\n\t\t#停止接收消息\r\n\t\tsocket.on SOCKETEVENTNAMES.STOPNEWMESSAGE, (res)->\r\n\t\t\tkey = getReceiveSocketKey(res.object_name, res.record_id, socket.request._query[\"X-User-Id\"])\r\n\t\t\treceiveMessageSockets[key] = null;\r\n\r\n\t\t#开始接收消息\r\n\t\tsocket.on SOCKETEVENTNAMES.RECEIVEMESSAGE, (res)->\r\n\t\t\tkey = getReceiveSocketKey(res.object_name, res.record_id, socket.request._query[\"X-User-Id\"])\r\n\t\t\treceiveMessageSockets[key] = socket;\r\n\r\n\r\n\t\t#停止接收消息\r\n\t\tsocket.on SOCKETEVENTNAMES.STOPNEWSUBSCRIPTIONS, (res)->\r\n\t\t\tkey = getReceiveSocketKey(res.object_name, '', socket.request._query[\"X-User-Id\"])\r\n\t\t\treceiveSubscriptionSockets[key] = null;\r\n\r\n\t\t#开始接收消息\r\n\t\tsocket.on SOCKETEVENTNAMES.RECEIVESUBSCRIPTIONS, (res)->\r\n\t\t\tkey = getReceiveSocketKey(res.object_name, '', socket.request._query[\"X-User-Id\"])\r\n\t\t\treceiveSubscriptionSockets[key] = socket;\r\n\t\t\tsendUnreadBadgeFiber(socket, '', socket.request._query[\"X-User-Id\"]);\r\n\t)\r\n\r\n\ttry\r\n\t\tserver.listen(PORT);\r\n\t\tconsole.log('chat socket.io port', PORT);\r\n\tcatch e\r\n\t\tconsole.error(e)\r\n\r\n\t#发送消息\r\n\tsendNewMessage = (msg) ->\r\n\t\tif msg.related_to.o && msg.related_to.ids.length > 0\r\n\t\t\tobject_name = msg.related_to.o;\r\n\t\t\trecord_id = msg.related_to.ids[0];\r\n\t\t\tdelete msg.related_to\r\n\t\t\tmsg.owner = Creator.getCollection(\"users\").findOne({_id: msg.owner}, {\r\n\t\t\t\tfields: {\r\n\t\t\t\t\t_id: 1,\r\n\t\t\t\t\tname: 1,\r\n\t\t\t\t\tavatarUrl: 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif object_name == 'chat_rooms'\r\n\t\t\t\troom = Creator.getCollection(object_name).findOne({_id: record_id}, {fields: {members: 1}})\r\n\t\t\t\tif room\r\n\t\t\t\t\t_.forEach room?.members, (m)->\r\n\t\t\t\t\t\tkey = getReceiveSocketKey(object_name, record_id, m)\r\n\t\t\t\t\t\tsocketEmit(receiveMessageSockets[key], SOCKETEVENTNAMES.NEWMESSAGE, msg)\r\n\t\t\telse\r\n\t\t\t\tparticipants = Creator.getCollection(\"chat_subscriptions\").find({'related_to.o': object_name, 'related_to.ids': [record_id]}, {fields: {owner: 1}})\r\n\t\t\t\tparticipants.forEach (p)->\r\n\t\t\t\t\tkey = getReceiveSocketKey(object_name, record_id, p.owner)\r\n\t\t\t\t\tsocketEmit(receiveMessageSockets[key], SOCKETEVENTNAMES.NEWMESSAGE, msg)\r\n\r\n\r\n\t#订阅chat_messages\r\n\tchat_messages_init = false\r\n\tCreator.getCollection(\"chat_messages\").find({'created': {$gte: new Date()}}, {\r\n\t\tfields: {\r\n\t\t\tcreated_by: 0,\r\n\t\t\tmodified: 0,\r\n\t\t\tmodified_by: 0\r\n\t\t}\r\n\t}).observe {\r\n\t\tadded: (newDocument)->\r\n\t\t\tif chat_messages_init\r\n\t\t\t\tsendNewMessage newDocument\r\n\t\tchanged: (newDocument, oldDocument)->\r\n\t\t\tsendNewMessage newDocument\r\n\t\tremoved: (oldDocument)->\r\n\t\t\tsendNewMessage oldDocument\r\n\t}\r\n\tchat_messages_init = true\r\n\r\n\r\n\tsendSubscription = (sub)->\r\n\t\tif sub.related_to.o && sub.related_to.ids.length > 0\r\n\t\t\tobject_name = sub.related_to.o;\r\n\t\t\trecord_id = sub.related_to.ids[0];\r\n\t\t\tsub.modified_by = Creator.getCollection(\"users\").findOne({_id: sub.modified_by}, {\r\n\t\t\t\tfields: {\r\n\t\t\t\t\t_id: 1,\r\n\t\t\t\t\tname: 1,\r\n\t\t\t\t\tavatarUrl: 1\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tkey = getReceiveSocketKey(object_name, '', sub.owner)\r\n\t\t\tif receiveSubscriptionSockets[key]\r\n\t\t\t\tif object_name == 'chat_rooms'\r\n\t\t\t\t\troom = Creator.getCollection(object_name).findOne({_id: record_id}, {fields: {members: 1}})\r\n\t\t\t\t\tif room\r\n\t\t\t\t\t\tsub._room = {\r\n\t\t\t\t\t\t\t_id: room._id,\r\n\t\t\t\t\t\t\tmembers: Creator.getCollection(\"users\").find({_id: {$in: room.members || []}}, {\r\n\t\t\t\t\t\t\t\tfields: {\r\n\t\t\t\t\t\t\t\t\t_id: 1,\r\n\t\t\t\t\t\t\t\t\tname: 1,\r\n\t\t\t\t\t\t\t\t\tavatarUrl: 1\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}).fetch()\r\n\t\t\t\t\t\t}\r\n\t\t\t\tsocketEmit(receiveSubscriptionSockets[key], SOCKETEVENTNAMES.SUBSCRIPTIONS, sub)\r\n\t\t\t\tsendUnreadBadge(receiveSubscriptionSockets[key], '', sub.owner);\r\n\r\n\t#订阅chat_subscriptions\r\n\tchat_subscriptions_init = false\r\n\tCreator.getCollection(\"chat_subscriptions\").find({\r\n\t\t$or: [{'created': {$gte: new Date()}}, 'modified': {$gte: new Date()}]\r\n\t}, {\r\n\t\tfields: {\r\n\t\t\tcreated_by: 0\r\n\t\t}\r\n\t}).observe {\r\n\t\tadded: (newDocument)->\r\n\t\t\tif chat_subscriptions_init\r\n\t\t\t\tsendSubscription newDocument\r\n\t\tchanged: (newDocument, oldDocument)->\r\n\t\t\tsendSubscription newDocument\r\n\t\tremoved: (oldDocument)->\r\n\t\t\tsendSubscription oldDocument\r\n\t}\r\n\tchat_subscriptions_init = true","var Fiber, PORT, SOCKETEVENTNAMES, SOCKETS, checkAuthToken, checkAuthTokenFiber, getReceiveSocketKey, http, receiveMessageSockets, receiveSubscriptionSockets, sendUnreadBadge, sendUnreadBadgeFiber, socketEmit, socket_io;\n\nhttp = require('http');\n\nsocket_io = require('socket.io');\n\nFiber = require('fibers');\n\nif (!process.env.SOCKET_IO_PORT) {\n  return;\n}\n\nPORT = process.env.SOCKET_IO_PORT || 8080;\n\nSOCKETS = {};\n\nreceiveMessageSockets = {};\n\nreceiveSubscriptionSockets = {};\n\nSOCKETEVENTNAMES = {\n  NEWMESSAGE: 'new message',\n  STOPNEWMESSAGE: 'stop message',\n  RECEIVEMESSAGE: 'receive message',\n  SUBSCRIPTIONS: 'subscriptions',\n  STOPNEWSUBSCRIPTIONS: 'stop subscriptions',\n  RECEIVESUBSCRIPTIONS: 'receive subscriptions',\n  COUNTUNREAD: 'count unread'\n};\n\ncheckAuthToken = function(userId, authToken) {\n  var hashedToken, user;\n  if (userId && authToken) {\n    hashedToken = Accounts._hashLoginToken(authToken);\n    user = wrapAsyncFindOne(db.users, {\n      _id: userId,\n      \"services.resume.loginTokens.hashedToken\": hashedToken\n    });\n    if (user) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return false;\n};\n\ngetReceiveSocketKey = function(object_name, record_id, userId) {\n  return object_name + \"_\" + record_id + \"_\" + userId;\n};\n\nsendUnreadBadge = function(socket, space_id, owner) {\n  var countUnread;\n  countUnread = 0;\n  Creator.getCollection(\"chat_subscriptions\").find({\n    owner: owner,\n    unread: {\n      $gt: 0\n    }\n  }, {\n    fields: {\n      unread: 1\n    }\n  }).forEach(function(_r) {\n    return countUnread += _r.unread;\n  });\n  return socketEmit(socket, SOCKETEVENTNAMES.COUNTUNREAD, countUnread);\n};\n\nsendUnreadBadgeFiber = function(socket, space_id, owner) {\n  return Fiber(function() {\n    return sendUnreadBadge(socket, space_id, owner);\n  }).run();\n};\n\ncheckAuthTokenFiber = function(socket, userId, authToken) {\n  return Fiber(function() {\n    var check;\n    check = Steedos.checkAuthToken(userId, authToken);\n    if (!check) {\n      SOCKETS[socket.id] = null;\n      return socket.disconnect();\n    }\n  }).run();\n};\n\nsocketEmit = function(socket, eventname, data) {\n  if (socket && SOCKETS[socket.id]) {\n    return socket.emit(eventname, data);\n  }\n};\n\nMeteor.startup(function() {\n  var chat_messages_init, chat_subscriptions_init, counter, e, io, sendNewMessage, sendSubscription, server;\n  server = http.createServer();\n  io = socket_io(server);\n  counter = 0;\n  io.on('connection', function(socket) {\n    var authToken, query, userId;\n    query = socket.request._query;\n    userId = query[\"X-User-Id\"];\n    authToken = query[\"X-Auth-Token\"];\n    if (!userId || !authToken) {\n      socket.disconnect();\n      return;\n    }\n    checkAuthTokenFiber(socket, userId, authToken);\n    SOCKETS[socket.id] = socket;\n    socket.on('disconnect', function() {\n      query = socket.request._query;\n      userId = query[\"X-User-Id\"];\n      return SOCKETS[socket.id] = null;\n    });\n    socket.on(SOCKETEVENTNAMES.STOPNEWMESSAGE, function(res) {\n      var key;\n      key = getReceiveSocketKey(res.object_name, res.record_id, socket.request._query[\"X-User-Id\"]);\n      return receiveMessageSockets[key] = null;\n    });\n    socket.on(SOCKETEVENTNAMES.RECEIVEMESSAGE, function(res) {\n      var key;\n      key = getReceiveSocketKey(res.object_name, res.record_id, socket.request._query[\"X-User-Id\"]);\n      return receiveMessageSockets[key] = socket;\n    });\n    socket.on(SOCKETEVENTNAMES.STOPNEWSUBSCRIPTIONS, function(res) {\n      var key;\n      key = getReceiveSocketKey(res.object_name, '', socket.request._query[\"X-User-Id\"]);\n      return receiveSubscriptionSockets[key] = null;\n    });\n    return socket.on(SOCKETEVENTNAMES.RECEIVESUBSCRIPTIONS, function(res) {\n      var key;\n      key = getReceiveSocketKey(res.object_name, '', socket.request._query[\"X-User-Id\"]);\n      receiveSubscriptionSockets[key] = socket;\n      return sendUnreadBadgeFiber(socket, '', socket.request._query[\"X-User-Id\"]);\n    });\n  });\n  try {\n    server.listen(PORT);\n    console.log('chat socket.io port', PORT);\n  } catch (error) {\n    e = error;\n    console.error(e);\n  }\n  sendNewMessage = function(msg) {\n    var object_name, participants, record_id, room;\n    if (msg.related_to.o && msg.related_to.ids.length > 0) {\n      object_name = msg.related_to.o;\n      record_id = msg.related_to.ids[0];\n      delete msg.related_to;\n      msg.owner = Creator.getCollection(\"users\").findOne({\n        _id: msg.owner\n      }, {\n        fields: {\n          _id: 1,\n          name: 1,\n          avatarUrl: 1\n        }\n      });\n      if (object_name === 'chat_rooms') {\n        room = Creator.getCollection(object_name).findOne({\n          _id: record_id\n        }, {\n          fields: {\n            members: 1\n          }\n        });\n        if (room) {\n          return _.forEach(room != null ? room.members : void 0, function(m) {\n            var key;\n            key = getReceiveSocketKey(object_name, record_id, m);\n            return socketEmit(receiveMessageSockets[key], SOCKETEVENTNAMES.NEWMESSAGE, msg);\n          });\n        }\n      } else {\n        participants = Creator.getCollection(\"chat_subscriptions\").find({\n          'related_to.o': object_name,\n          'related_to.ids': [record_id]\n        }, {\n          fields: {\n            owner: 1\n          }\n        });\n        return participants.forEach(function(p) {\n          var key;\n          key = getReceiveSocketKey(object_name, record_id, p.owner);\n          return socketEmit(receiveMessageSockets[key], SOCKETEVENTNAMES.NEWMESSAGE, msg);\n        });\n      }\n    }\n  };\n  chat_messages_init = false;\n  Creator.getCollection(\"chat_messages\").find({\n    'created': {\n      $gte: new Date()\n    }\n  }, {\n    fields: {\n      created_by: 0,\n      modified: 0,\n      modified_by: 0\n    }\n  }).observe({\n    added: function(newDocument) {\n      if (chat_messages_init) {\n        return sendNewMessage(newDocument);\n      }\n    },\n    changed: function(newDocument, oldDocument) {\n      return sendNewMessage(newDocument);\n    },\n    removed: function(oldDocument) {\n      return sendNewMessage(oldDocument);\n    }\n  });\n  chat_messages_init = true;\n  sendSubscription = function(sub) {\n    var key, object_name, record_id, room;\n    if (sub.related_to.o && sub.related_to.ids.length > 0) {\n      object_name = sub.related_to.o;\n      record_id = sub.related_to.ids[0];\n      sub.modified_by = Creator.getCollection(\"users\").findOne({\n        _id: sub.modified_by\n      }, {\n        fields: {\n          _id: 1,\n          name: 1,\n          avatarUrl: 1\n        }\n      });\n      key = getReceiveSocketKey(object_name, '', sub.owner);\n      if (receiveSubscriptionSockets[key]) {\n        if (object_name === 'chat_rooms') {\n          room = Creator.getCollection(object_name).findOne({\n            _id: record_id\n          }, {\n            fields: {\n              members: 1\n            }\n          });\n          if (room) {\n            sub._room = {\n              _id: room._id,\n              members: Creator.getCollection(\"users\").find({\n                _id: {\n                  $in: room.members || []\n                }\n              }, {\n                fields: {\n                  _id: 1,\n                  name: 1,\n                  avatarUrl: 1\n                }\n              }).fetch()\n            };\n          }\n        }\n        socketEmit(receiveSubscriptionSockets[key], SOCKETEVENTNAMES.SUBSCRIPTIONS, sub);\n        return sendUnreadBadge(receiveSubscriptionSockets[key], '', sub.owner);\n      }\n    }\n  };\n  chat_subscriptions_init = false;\n  Creator.getCollection(\"chat_subscriptions\").find({\n    $or: [\n      {\n        'created': {\n          $gte: new Date()\n        }\n      }, {\n        'modified': {\n          $gte: new Date()\n        }\n      }\n    ]\n  }, {\n    fields: {\n      created_by: 0\n    }\n  }).observe({\n    added: function(newDocument) {\n      if (chat_subscriptions_init) {\n        return sendSubscription(newDocument);\n      }\n    },\n    changed: function(newDocument, oldDocument) {\n      return sendSubscription(newDocument);\n    },\n    removed: function(oldDocument) {\n      return sendSubscription(oldDocument);\n    }\n  });\n  return chat_subscriptions_init = true;\n});\n"]}