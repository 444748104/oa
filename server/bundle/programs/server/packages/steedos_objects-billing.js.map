{"version":3,"sources":["meteor://💻app/packages/steedos_objects-billing/models/billings.coffee","meteor://💻app/models/billings.coffee","meteor://💻app/packages/steedos_objects-billing/models/billing_pay_records.coffee","meteor://💻app/models/billing_pay_records.coffee","meteor://💻app/packages/steedos_objects-billing/models/modules.coffee","meteor://💻app/packages/steedos_objects-billing/models/modules_changelogs.coffee","meteor://💻app/packages/steedos_objects-billing/models/users_changelogs.coffee","meteor://💻app/models/users_changelogs.coffee","meteor://💻app/packages/steedos_objects-billing/models/steedos_statistics.coffee"],"names":["db","billings","Meteor","Collection","helpers","transaction_i18n","d","t","transaction","TAPi18n","__","isServer","_ensureIndex","background","billing_pay_records","order_created","moment","created","format","order_paid","paid","order_total_fee","total_fee","toString","modules","modules_changelogs","users_changelogs","_simpleSchema","SimpleSchema","change_date","type","Date","operator","String","space","operation","user","user_count","Number","created_by","before","insert","userId","doc","steedos_statistics"],"mappings":"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","file":"/packages/steedos_objects-billing.js","sourcesContent":["db.billings = new Meteor.Collection('billings')\r\n\r\n\r\ndb.billings.helpers\r\n\ttransaction_i18n: ()->\r\n\t\tt = this.transaction\r\n\t\td = \"\"\r\n\t\tif t is \"Starting balance\"\r\n\t\t\td = TAPi18n.__('billing_tranDetail.starting')\r\n\t\telse if t is \"Payment\"\r\n\t\t\td = TAPi18n.__('billing_tranDetail.payment')\r\n\t\telse if t is \"Service adjustment\"\r\n\t\t\td = TAPi18n.__('billing_tranDetail.adjustment')\r\n\t\telse if t is \"workflow\"\r\n\t\t\td = TAPi18n.__('billing_tranDetail.workflow')\r\n\t\telse if t is \"workflow.professional\"\r\n\t\t\td = TAPi18n.__('billing_tranDetail.workflow')\r\n\t\telse if t is \"chat.professional\"\r\n\t\t\td = TAPi18n.__('billing_tranDetail.chat')\r\n\t\telse\r\n\t\t\td = t\r\n\r\n\t\treturn d\r\n\r\nif Meteor.isServer\r\n\tdb.billings._ensureIndex({\r\n\t\t\"space\": 1\r\n\t},{background: true})","db.billings = new Meteor.Collection('billings');\n\ndb.billings.helpers({\n  transaction_i18n: function() {\n    var d, t;\n    t = this.transaction;\n    d = \"\";\n    if (t === \"Starting balance\") {\n      d = TAPi18n.__('billing_tranDetail.starting');\n    } else if (t === \"Payment\") {\n      d = TAPi18n.__('billing_tranDetail.payment');\n    } else if (t === \"Service adjustment\") {\n      d = TAPi18n.__('billing_tranDetail.adjustment');\n    } else if (t === \"workflow\") {\n      d = TAPi18n.__('billing_tranDetail.workflow');\n    } else if (t === \"workflow.professional\") {\n      d = TAPi18n.__('billing_tranDetail.workflow');\n    } else if (t === \"chat.professional\") {\n      d = TAPi18n.__('billing_tranDetail.chat');\n    } else {\n      d = t;\n    }\n    return d;\n  }\n});\n\nif (Meteor.isServer) {\n  db.billings._ensureIndex({\n    \"space\": 1\n  }, {\n    background: true\n  });\n}\n","db.billing_pay_records = new Meteor.Collection('billing_pay_records')\r\n\r\ndb.billing_pay_records.helpers\r\n\torder_created: ()->\r\n\t\treturn moment(this.created).format('YYYY-MM-DD HH:mm:ss')\r\n\r\n\torder_paid: ()->\r\n\t\treturn if this.paid then TAPi18n.__(\"billing.has_paid\") else TAPi18n.__(\"billing.not_paid\")\r\n\r\n\torder_total_fee: ()->\r\n\t\treturn (this.total_fee/100).toString()\r\n\r\n# Creator.Objects.billing_pay_records = \r\n# \tname: \"billing_pay_records\"\r\n# \tlabel: \"订单\"\r\n# \ticon: \"apps\"\r\n# \tfields:\r\n# \t\tinfo:\r\n# \t\t\tlabel:\"详单详情\"\r\n# \t\t\ttype: \"object\"\r\n# \t\t\tblackbox: true\r\n# \t\t\tomit: true\r\n# \t\t\thidden: true\r\n\t\t\r\n# \t\ttotal_fee:\r\n# \t\t\tlabel:\"金额￥\"\r\n# \t\t\ttype: \"number\"\r\n# \t\t\tdefaultValue: 100\r\n# \t\t\tomit: true\r\n\t\t\r\n# \t\tpaid:\r\n# \t\t\tlabel:\"已付款\"\r\n# \t\t\ttype: \"boolean\"\r\n# \t\t\tomit: true\r\n# \t\t\tdefaultValue: false\r\n\t\t\r\n# \t\tmodules:\r\n# \t\t\tlabel:\"模块\"\r\n# \t\t\ttype: \"[text]\"\r\n# \t\t\tblackbox: true\r\n# \t\t\tomit: true\r\n\t\t\r\n# \t\tend_date:\r\n# \t\t\tlabel:\"租用日期至\"\r\n# \t\t\ttype: \"date\"\r\n# \t\t\tomit: true\r\n\t\t\r\n# \t\tuser_count:\r\n# \t\t\tlabel:\"名额\"\r\n# \t\t\ttype: \"number\"\r\n# \t\t\tomit: true\r\n\r\n# \tlist_views:\r\n# \t\tall:\r\n# \t\t\tlabel: \"所有\"\r\n# \t\t\tfilter_scope: \"space\"\r\n# \t\t\tcolumns: [\"modules\", \"user_count\", \"end_date\", \"total_fee\", \"paid\", \"created\"]\r\n\t\r\n# \tpermission_set:\r\n# \t\tuser:\r\n# \t\t\tallowCreate: false\r\n# \t\t\tallowDelete: false\r\n# \t\t\tallowEdit: false\r\n# \t\t\tallowRead: false\r\n# \t\t\tmodifyAllRecords: false\r\n# \t\t\tviewAllRecords: false \r\n# \t\tadmin:\r\n# \t\t\tallowCreate: false\r\n# \t\t\tallowDelete: false\r\n# \t\t\tallowEdit: false\r\n# \t\t\tallowRead: true\r\n# \t\t\tmodifyAllRecords: false\r\n# \t\t\tviewAllRecords: true","db.billing_pay_records = new Meteor.Collection('billing_pay_records');\n\ndb.billing_pay_records.helpers({\n  order_created: function() {\n    return moment(this.created).format('YYYY-MM-DD HH:mm:ss');\n  },\n  order_paid: function() {\n    if (this.paid) {\n      return TAPi18n.__(\"billing.has_paid\");\n    } else {\n      return TAPi18n.__(\"billing.not_paid\");\n    }\n  },\n  order_total_fee: function() {\n    return (this.total_fee / 100).toString();\n  }\n});\n","db.modules = new Meteor.Collection('modules')","db.modules_changelogs = new Meteor.Collection('modules_changelogs')","db.users_changelogs = new Meteor.Collection('users_changelogs')\r\n\r\ndb.users_changelogs._simpleSchema = new SimpleSchema\r\n  # 日期，记录事件发生的时间，格式：YYYYMMDD\r\n  change_date:\r\n    type: Date\r\n  # 操作者\r\n  operator:\r\n    type: String\r\n  # 工作区\r\n  space:\r\n    type: String\r\n  # add（增加）delete（删除）enable（启用）disable（停用）\r\n  operation:\r\n    type: String\r\n  # 对象，user_id\r\n  user:\r\n    type: String\r\n  # 工作区中启用的用户数\r\n  user_count:\r\n    type: Number\r\n  # 创建时间\r\n  created:\r\n    type: Date\r\n  # 创建人\r\n  created_by:\r\n    type: String\r\n\r\n\r\nif Meteor.isServer\r\n  db.users_changelogs.before.insert (userId, doc) ->\r\n    doc.change_date = moment().format('YYYYMMDD');\r\n    doc.created = new Date();\r\n    doc.created_by = userId;\r\n\r\n","db.users_changelogs = new Meteor.Collection('users_changelogs');\n\ndb.users_changelogs._simpleSchema = new SimpleSchema({\n  change_date: {\n    type: Date\n  },\n  operator: {\n    type: String\n  },\n  space: {\n    type: String\n  },\n  operation: {\n    type: String\n  },\n  user: {\n    type: String\n  },\n  user_count: {\n    type: Number\n  },\n  created: {\n    type: Date\n  },\n  created_by: {\n    type: String\n  }\n});\n\nif (Meteor.isServer) {\n  db.users_changelogs.before.insert(function(userId, doc) {\n    doc.change_date = moment().format('YYYYMMDD');\n    doc.created = new Date();\n    return doc.created_by = userId;\n  });\n}\n","db.steedos_statistics = new Meteor.Collection('steedos_statistics')\r\n"]}