{"version":3,"sources":["meteor://💻app/packages/steedos:users-import/checkNpm.js","meteor://💻app/packages/steedos_users-import/server/methods/import_users.coffee","meteor://💻app/server/methods/import_users.coffee","meteor://💻app/packages/steedos_users-import/routes/api_space_users_export.coffee","meteor://💻app/routes/api_space_users_export.coffee"],"names":["checkNpmVersions","module","link","v","Meteor","methods","import_users","space_id","user_pk","data","onlyCheck","_self","accepted_user_count","currentUser","currentUserLocale","errorList","owner_id","root_org","space","testData","userId","Error","db","organizations","findOne","parent","spaces","admins","includes","space_users","find","_id","user_accepted","count","length","user_limit","owner","users","fields","locale","phone","forEach","item","i","multiOrgs","operating","organization","organization_depts","ref","ref1","ref2","ref3","selector","spaceUserExist","testObj","user","userExist","email","username","filterProperty","test","push","mobile","$or","fetch","password","services","bcrypt","split","name","dept_name","j","orgFullname","fullname","trim","orgCount","belongOrgids","e","error","now","space_user","space_user_update_doc","su_doc","udoc","userInfo","user_id","Date","org","_makeNewID","steedos_id","spaces_invited","email_verified","mobile_verified","insert","Accounts","setPassword","logout","_","uniq","concat","company","position","work_phone","sort_no","keys","update","$set","invite_state","error1","line","message","reason","startup","WebApp","connectHandlers","use","req","res","next","current_user_info","ejs","ejsLint","error_obj","fileName","lang","orgName","org_id","org_ids","org_objs","query","ret","sheet_name","str","template","users_to_xls","uuflowManager","check_authorization","Array","Steedos","isSpaceAdmin","sort","children","pluck","each","org_obj","union","$in","require","Assets","getText","lint","console","compile","type","width","title","TAPi18n","__","transform","value","orgNames","map","index","join","replace","moment","format","setHeader","encodeURI","end","stack"],"mappings":"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","file":"/packages/steedos_users-import.js","sourcesContent":["import { checkNpmVersions } from 'meteor/tmeasday:check-npm-versions';\ncheckNpmVersions({\n\t\"ejs\": \"^2.5.5\",\n\t\"ejs-lint\": \"^0.2.0\"\n}, 'steedos:users-import');\n","Meteor.methods\n\t###\n\t\t1、校验用户是否存在\n\t\t2、校验工作区用户是否存在\n\t\t3、校验部门是否存在\n\t\t4、校验部门用户是否存在\n\t\tTODO: 国际化\n\t###\n\timport_users: (space_id, user_pk, data, onlyCheck)->\n\n\t\t_self = this\n\n\t\tif !this.userId\n\t\t\tthrow new Meteor.Error(401, \"请先登录\")\n\n\t\troot_org = db.organizations.findOne({space: space_id, parent: null})\n\n\t\tspace = db.spaces.findOne(space_id)\n\t\tif !space || !space?.admins.includes(this.userId)\n\t\t\tthrow new Meteor.Error(401, \"只有工作区管理员可以导入用户\");\n\n\t\t# if !Steedos.hasFeature('paid', space?._id)\n\t\t# \tthrow new Meteor.Error(401, \"基础版不支持此功能\");\n\n\t\taccepted_user_count = db.space_users.find({space: space._id, user_accepted: true}).count()\n\t\tif (accepted_user_count + data.length) > space.user_limit\n\t\t\tthrow new Meteor.Error(400, \"需要提升已购买用户数至#{accepted_user_count + data.length}(当前#{space.user_limit})\" +\", 请在企业信息模块中点击升级按钮购买\")\n\n\t\towner_id = space.owner\n\n\t\ttestData = []\n\n\t\terrorList = []\n\n\t\tcurrentUser = db.users.findOne({_id: _self.userId},{fields:{locale:1,phone:1}})\n\t\tcurrentUserLocale = currentUser.locale\n\n\t\t# 数据统一校验\n\n\t\tdata.forEach (item, i)->\n\t\t\t# console.log item\n\t\t\t# 用户名，手机号，邮箱不能都为空\n\t\t\tif !item.phone and !item.email\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行: 手机号，邮箱不能都为空\")\n\n\t\t\t# 判断excel中的数据，用户名、手机号等信息是否有误\n\t\t\ttestObj = {}\n\t\t\tif item.username\n\t\t\t\ttestObj.username = item.username\n\t\t\t\tif testData.filterProperty(\"username\", item.username).length > 0\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：用户名重复\");\n\n\t\t\tif item.phone\n\t\t\t\ttestObj.phone = item.phone\n\t\t\t\tif testData.filterProperty(\"phone\", item.phone).length > 0\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：手机号重复\");\n\n\t\t\tif item.email\n\t\t\t\tif not /^([A-Z0-9\\.\\-\\_\\+])*([A-Z0-9\\+\\-\\_])+\\@[A-Z0-9]+([\\-][A-Z0-9]+)*([\\.][A-Z0-9\\-]+){1,8}$/i.test(item.email)\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：邮件格式错误#{item.email}\");\n\n\t\t\t\ttestObj.email = item.email\n\t\t\t\tif testData.filterProperty(\"email\", item.email).length > 0\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：邮件重复\");\n\n\t\t\titem.space = space_id\n\n\t\t\ttestData.push(testObj)\n\n\t\t\t# 获取查找user的条件\n\t\t\tselector = []\n\t\t\toperating = \"\"\n\t\t\tif item.username\n\t\t\t\tselector.push {username: item.username}\n\t\t\tif item.email\n\t\t\t\tselector.push {email: item.email}\n\t\t\tif item.phone\n\t\t\t\tselector.push {mobile: item.phone}\n\n\t\t\tuserExist = db.users.find({$or: selector})\n\n\n\t\t\t# 先判断是否能匹配到唯一的user，然后判断该用户是insert到space_users还是update\n\t\t\tif userExist.count() > 1\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：用户名、手机号、邮箱信息有误，无法匹配到同一账号\")\n\t\t\telse if userExist.count() == 1\n\t\t\t\tuser = userExist.fetch()[0]._id\n\t\t\t\tspaceUserExist = db.space_users.find({space: space_id, user: user})\n\t\t\t\tif spaceUserExist.count() == 1\n\t\t\t\t\toperating = \"update\"\n\t\t\t\telse if spaceUserExist.count() == 0\n\t\t\t\t\toperating = \"insert\"\n\t\t\telse if userExist.count() == 0\n\t\t\t\t# 新增space_users的数据校验\n\t\t\t\toperating = \"insert\"\n\n\t\t\t# 判断是否能修改用户的密码\n\t\t\tif item.password and userExist.count() == 1\n\t\t\t\tif userExist.fetch()[0].services?.password?.bcrypt\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：用户已设置密码，不允许修改\");\n\n\t\t\t# 判断部门是否合理\n\t\t\torganization = item.organization\n\n\t\t\tif !organization\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：部门不能为空\");\n\n\t\t\torganization_depts = organization.split(\"/\");\n\n\t\t\tif organization_depts.length < 1 || organization_depts[0] != root_org.name\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：无效的根部门\");\n\n\t\t\tif item.password && user?.services?.password?.bcrypt\n\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：用户已设置密码，不允许修改\");\n\n\t\t\torganization_depts.forEach (dept_name, j) ->\n\t\t\t\tif !dept_name\n\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：无效的部门\");\n\n\t\t\tmultiOrgs = organization.split(\",\")\n\t\t\tmultiOrgs.forEach (orgFullname) ->\n\t\t\t\torganization_depts = orgFullname.trim().split(\"/\")\n\t\t\t\tfullname = \"\"\n\t\t\t\torganization_depts.forEach (dept_name, j) ->\n\t\t\t\t\tif j > 0\n\t\t\t\t\t\tif j == 1\n\t\t\t\t\t\t\tfullname = dept_name\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tfullname = fullname + \"/\" + dept_name\n\n\t\t\t\t\t\torgCount = db.organizations.find({space: space_id, fullname: fullname}).count()\n\n\t\t\t\t\t\tif orgCount == 0\n\t\t\t\t\t\t\tthrow new Meteor.Error(500, \"第#{i + 1}行：部门(#{dept_name})不存在，请先创建\");\n\n\t\tif onlyCheck\n\t\t\treturn ;\n\n\t\t# 数据导入\n\t\tdata.forEach (item, i)->\n\t\t\terror = {}\n\t\t\ttry\n\t\t\t\tselector = []\n\t\t\t\toperating = \"\"\n\t\t\t\t# if item.username\n\t\t\t\t# \tselector.push {username: item.username}\n\t\t\t\tif item.email\n\t\t\t\t\tselector.push {email: item.email}\n\t\t\t\tif item.phone\n\t\t\t\t\tselector.push {mobile: item.phone}\n\t\t\t\tuserExist = db.users.find({$or: selector})\n\t\t\t\tif userExist.count() > 1\n\t\t\t\t\tthrow new Meteor.Error(400, \"用户名、手机号、邮箱信息有误，无法匹配到同一账号\")\n\t\t\t\telse if userExist.count() == 1\n\t\t\t\t\tuser = userExist.fetch()[0]\n\n\t\t\t\tnow = new Date()\n\n\t\t\t\torganization = item.organization\n\t\t\t\tmultiOrgs = organization.split(\",\")\n\t\t\t\tbelongOrgids = []\n\t\t\t\tmultiOrgs.forEach (orgFullname) ->\n\t\t\t\t\torganization_depts = orgFullname.trim().split(\"/\")\n\t\t\t\t\tfullname = \"\"\n\t\t\t\t\torganization_depts.forEach (dept_name, j) ->\n\t\t\t\t\t\tif j > 0\n\t\t\t\t\t\t\tif j == 1\n\t\t\t\t\t\t\t\tfullname = dept_name\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tfullname = fullname + \"/\" + dept_name\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tfullname = dept_name\n\n\t\t\t\t\torg = db.organizations.findOne({space: space_id, fullname: fullname})\n\n\t\t\t\t\tif org\n\t\t\t\t\t\tbelongOrgids.push org._id\n\n\n\t\t\t\tuser_id = null\n\t\t\t\tif user\n\t\t\t\t\tuser_id = user._id\n\t\t\t\telse\n\t\t\t\t\tudoc = {}\n\t\t\t\t\tudoc._id = db.users._makeNewID()\n\t\t\t\t\tudoc.steedos_id = item.email || udoc._id\n\t\t\t\t\tudoc.locale = currentUserLocale\n\t\t\t\t\tudoc.spaces_invited = [space_id]\n\t\t\t\t\tif item.name\n\t\t\t\t\t\tudoc.name = item.name\n\n\t\t\t\t\tif item.email\n\t\t\t\t\t\tudoc.email = item.email\n\t\t\t\t\t\tudoc.email_verified = false\n\n\t\t\t\t\tif item.username\n\t\t\t\t\t\tudoc.username = item.username\n\n\t\t\t\t\tif item.phone\n\t\t\t\t\t\tudoc.mobile = item.phone\n\t\t\t\t\t\tudoc.mobile_verified = false\n\t\t\t\t\tuser_id = db.users.insert(udoc)\n\n\t\t\t\t\tif item.password\n\t\t\t\t\t\tAccounts.setPassword(user_id, item.password, {logout: false})\n\n\t\t\t\tspace_user = db.space_users.findOne({space: space_id, user: user_id})\n\n\t\t\t\tif space_user\n\t\t\t\t\tif belongOrgids.length > 0\n\t\t\t\t\t\tif !space_user.organizations\n\t\t\t\t\t\t\tspace_user.organizations = []\n\n\t\t\t\t\t\tspace_user_update_doc = {}\n\n\t\t\t\t\t\tspace_user_update_doc.organizations = _.uniq(space_user.organizations.concat(belongOrgids))\n\n\t\t\t\t\t\tif item.email\n\t\t\t\t\t\t\tspace_user_update_doc.email = item.email\n\n\t\t\t\t\t\tif item.name\n\t\t\t\t\t\t\tspace_user_update_doc.name = item.name\n\n\t\t\t\t\t\tif item.company\n\t\t\t\t\t\t\tspace_user_update_doc.company = item.company\n\n\t\t\t\t\t\tif item.position\n\t\t\t\t\t\t\tspace_user_update_doc.position = item.position\n\n\t\t\t\t\t\tif item.work_phone\n\t\t\t\t\t\t\tspace_user_update_doc.work_phone = item.work_phone\n\n\t\t\t\t\t\tif item.phone\n\t\t\t\t\t\t\tspace_user_update_doc.mobile = item.phone\n\n\t\t\t\t\t\tif item.sort_no\n\t\t\t\t\t\t\tspace_user_update_doc.sort_no = item.sort_no\n\n\t\t\t\t\t\tif _.keys(space_user_update_doc).length > 0\n\t\t\t\t\t\t\tdb.space_users.update({space: space_id, user: user_id}, {$set: space_user_update_doc})\n\n\t\t\t\t\t\tif space_user.invite_state == \"refused\" or space_user.invite_state == \"pending\"\n\t\t\t\t\t\t\tthrow new Meteor.Error(400, \"该用户还未接受加入工作区，不能修改他的个人信息\")\n\t\t\t\t\t\telse\n#\t\t\t\t\t\t\tif item.username\n#\t\t\t\t\t\t\t\tdb.users.update({_id: user_id},{$set:{username: item.username}})\n\t\t\t\t\t\t\tif item.password\n\t\t\t\t\t\t\t\tAccounts.setPassword(user_id, item.password, {logout: false})\n\n\t\t\t\telse\n\t\t\t\t\tif belongOrgids.length > 0\n\t\t\t\t\t\tsu_doc = {}\n\t\t\t\t\t\tsu_doc._id = db.space_users._makeNewID()\n\t\t\t\t\t\tsu_doc.space = space_id\n\n\t\t\t\t\t\tsu_doc.user_accepted =  true\n\t\t\t\t\t\tsu_doc.invite_state = \"accepted\"\n\n\t\t\t\t\t\tif user\n\t\t\t\t\t\t\tsu_doc.user_accepted = false\n\t\t\t\t\t\t\tsu_doc.invite_state = \"pending\"\n\n\t\t\t\t\t\tsu_doc.name = item.name\n\t\t\t\t\t\tif item.email\n\t\t\t\t\t\t\tsu_doc.email = item.email\n\t\t\t\t\t\tsu_doc.organization = belongOrgids[0]\n\t\t\t\t\t\tsu_doc.organizations = belongOrgids\n\n\t\t\t\t\t\tif item.position\n\t\t\t\t\t\t\tsu_doc.position = item.position\n\n\t\t\t\t\t\tif item.work_phone\n\t\t\t\t\t\t\tsu_doc.work_phone = item.work_phone\n\n\t\t\t\t\t\tif item.phone\n\t\t\t\t\t\t\tsu_doc.mobile = item.phone\n\n\t\t\t\t\t\tif item.sort_no\n\t\t\t\t\t\t\tsu_doc.sort_no = item.sort_no\n\n\t\t\t\t\t\tif item.company\n\t\t\t\t\t\t\tsu_doc.company = item.company\n\t\t\t\t\t\t\n\t\t\t\t\t\tif user_id\n\t\t\t\t\t\t\tuserInfo = db.users.findOne(user_id, { fields: { username: 1 } })\n\t\t\t\t\t\t\tif userInfo.username\n\t\t\t\t\t\t\t\tsu_doc.username = userInfo.username\n\t\t\t\t\t\t\tsu_doc.user = user_id\n\n\t\t\t\t\t\tdb.space_users.insert(su_doc)\n\t\t\tcatch e\n\t\t\t\terror.line = i+1\n\t\t\t\terror.message = e.reason\n\t\t\t\terrorList.push(error)\n\n\t\treturn errorList\n","Meteor.methods({\n\n  /*\n  \t\t1、校验用户是否存在\n  \t\t2、校验工作区用户是否存在\n  \t\t3、校验部门是否存在\n  \t\t4、校验部门用户是否存在\n  \t\tTODO: 国际化\n   */\n  import_users: function(space_id, user_pk, data, onlyCheck) {\n    var _self, accepted_user_count, currentUser, currentUserLocale, errorList, owner_id, root_org, space, testData;\n    _self = this;\n    if (!this.userId) {\n      throw new Meteor.Error(401, \"请先登录\");\n    }\n    root_org = db.organizations.findOne({\n      space: space_id,\n      parent: null\n    });\n    space = db.spaces.findOne(space_id);\n    if (!space || !(space != null ? space.admins.includes(this.userId) : void 0)) {\n      throw new Meteor.Error(401, \"只有工作区管理员可以导入用户\");\n    }\n    accepted_user_count = db.space_users.find({\n      space: space._id,\n      user_accepted: true\n    }).count();\n    if ((accepted_user_count + data.length) > space.user_limit) {\n      throw new Meteor.Error(400, (\"需要提升已购买用户数至\" + (accepted_user_count + data.length) + \"(当前\" + space.user_limit + \")\") + \", 请在企业信息模块中点击升级按钮购买\");\n    }\n    owner_id = space.owner;\n    testData = [];\n    errorList = [];\n    currentUser = db.users.findOne({\n      _id: _self.userId\n    }, {\n      fields: {\n        locale: 1,\n        phone: 1\n      }\n    });\n    currentUserLocale = currentUser.locale;\n    data.forEach(function(item, i) {\n      var multiOrgs, operating, organization, organization_depts, ref, ref1, ref2, ref3, selector, spaceUserExist, testObj, user, userExist;\n      if (!item.phone && !item.email) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行: 手机号，邮箱不能都为空\");\n      }\n      testObj = {};\n      if (item.username) {\n        testObj.username = item.username;\n        if (testData.filterProperty(\"username\", item.username).length > 0) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：用户名重复\");\n        }\n      }\n      if (item.phone) {\n        testObj.phone = item.phone;\n        if (testData.filterProperty(\"phone\", item.phone).length > 0) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：手机号重复\");\n        }\n      }\n      if (item.email) {\n        if (!/^([A-Z0-9\\.\\-\\_\\+])*([A-Z0-9\\+\\-\\_])+\\@[A-Z0-9]+([\\-][A-Z0-9]+)*([\\.][A-Z0-9\\-]+){1,8}$/i.test(item.email)) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：邮件格式错误\" + item.email);\n        }\n        testObj.email = item.email;\n        if (testData.filterProperty(\"email\", item.email).length > 0) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：邮件重复\");\n        }\n      }\n      item.space = space_id;\n      testData.push(testObj);\n      selector = [];\n      operating = \"\";\n      if (item.username) {\n        selector.push({\n          username: item.username\n        });\n      }\n      if (item.email) {\n        selector.push({\n          email: item.email\n        });\n      }\n      if (item.phone) {\n        selector.push({\n          mobile: item.phone\n        });\n      }\n      userExist = db.users.find({\n        $or: selector\n      });\n      if (userExist.count() > 1) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：用户名、手机号、邮箱信息有误，无法匹配到同一账号\");\n      } else if (userExist.count() === 1) {\n        user = userExist.fetch()[0]._id;\n        spaceUserExist = db.space_users.find({\n          space: space_id,\n          user: user\n        });\n        if (spaceUserExist.count() === 1) {\n          operating = \"update\";\n        } else if (spaceUserExist.count() === 0) {\n          operating = \"insert\";\n        }\n      } else if (userExist.count() === 0) {\n        operating = \"insert\";\n      }\n      if (item.password && userExist.count() === 1) {\n        if ((ref = userExist.fetch()[0].services) != null ? (ref1 = ref.password) != null ? ref1.bcrypt : void 0 : void 0) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：用户已设置密码，不允许修改\");\n        }\n      }\n      organization = item.organization;\n      if (!organization) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：部门不能为空\");\n      }\n      organization_depts = organization.split(\"/\");\n      if (organization_depts.length < 1 || organization_depts[0] !== root_org.name) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：无效的根部门\");\n      }\n      if (item.password && (user != null ? (ref2 = user.services) != null ? (ref3 = ref2.password) != null ? ref3.bcrypt : void 0 : void 0 : void 0)) {\n        throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：用户已设置密码，不允许修改\");\n      }\n      organization_depts.forEach(function(dept_name, j) {\n        if (!dept_name) {\n          throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：无效的部门\");\n        }\n      });\n      multiOrgs = organization.split(\",\");\n      return multiOrgs.forEach(function(orgFullname) {\n        var fullname;\n        organization_depts = orgFullname.trim().split(\"/\");\n        fullname = \"\";\n        return organization_depts.forEach(function(dept_name, j) {\n          var orgCount;\n          if (j > 0) {\n            if (j === 1) {\n              fullname = dept_name;\n            } else {\n              fullname = fullname + \"/\" + dept_name;\n            }\n            orgCount = db.organizations.find({\n              space: space_id,\n              fullname: fullname\n            }).count();\n            if (orgCount === 0) {\n              throw new Meteor.Error(500, \"第\" + (i + 1) + \"行：部门(\" + dept_name + \")不存在，请先创建\");\n            }\n          }\n        });\n      });\n    });\n    if (onlyCheck) {\n      return;\n    }\n    data.forEach(function(item, i) {\n      var belongOrgids, e, error, multiOrgs, now, operating, organization, selector, space_user, space_user_update_doc, su_doc, udoc, user, userExist, userInfo, user_id;\n      error = {};\n      try {\n        selector = [];\n        operating = \"\";\n        if (item.email) {\n          selector.push({\n            email: item.email\n          });\n        }\n        if (item.phone) {\n          selector.push({\n            mobile: item.phone\n          });\n        }\n        userExist = db.users.find({\n          $or: selector\n        });\n        if (userExist.count() > 1) {\n          throw new Meteor.Error(400, \"用户名、手机号、邮箱信息有误，无法匹配到同一账号\");\n        } else if (userExist.count() === 1) {\n          user = userExist.fetch()[0];\n        }\n        now = new Date();\n        organization = item.organization;\n        multiOrgs = organization.split(\",\");\n        belongOrgids = [];\n        multiOrgs.forEach(function(orgFullname) {\n          var fullname, org, organization_depts;\n          organization_depts = orgFullname.trim().split(\"/\");\n          fullname = \"\";\n          organization_depts.forEach(function(dept_name, j) {\n            if (j > 0) {\n              if (j === 1) {\n                return fullname = dept_name;\n              } else {\n                return fullname = fullname + \"/\" + dept_name;\n              }\n            } else {\n              return fullname = dept_name;\n            }\n          });\n          org = db.organizations.findOne({\n            space: space_id,\n            fullname: fullname\n          });\n          if (org) {\n            return belongOrgids.push(org._id);\n          }\n        });\n        user_id = null;\n        if (user) {\n          user_id = user._id;\n        } else {\n          udoc = {};\n          udoc._id = db.users._makeNewID();\n          udoc.steedos_id = item.email || udoc._id;\n          udoc.locale = currentUserLocale;\n          udoc.spaces_invited = [space_id];\n          if (item.name) {\n            udoc.name = item.name;\n          }\n          if (item.email) {\n            udoc.email = item.email;\n            udoc.email_verified = false;\n          }\n          if (item.username) {\n            udoc.username = item.username;\n          }\n          if (item.phone) {\n            udoc.mobile = item.phone;\n            udoc.mobile_verified = false;\n          }\n          user_id = db.users.insert(udoc);\n          if (item.password) {\n            Accounts.setPassword(user_id, item.password, {\n              logout: false\n            });\n          }\n        }\n        space_user = db.space_users.findOne({\n          space: space_id,\n          user: user_id\n        });\n        if (space_user) {\n          if (belongOrgids.length > 0) {\n            if (!space_user.organizations) {\n              space_user.organizations = [];\n            }\n            space_user_update_doc = {};\n            space_user_update_doc.organizations = _.uniq(space_user.organizations.concat(belongOrgids));\n            if (item.email) {\n              space_user_update_doc.email = item.email;\n            }\n            if (item.name) {\n              space_user_update_doc.name = item.name;\n            }\n            if (item.company) {\n              space_user_update_doc.company = item.company;\n            }\n            if (item.position) {\n              space_user_update_doc.position = item.position;\n            }\n            if (item.work_phone) {\n              space_user_update_doc.work_phone = item.work_phone;\n            }\n            if (item.phone) {\n              space_user_update_doc.mobile = item.phone;\n            }\n            if (item.sort_no) {\n              space_user_update_doc.sort_no = item.sort_no;\n            }\n            if (_.keys(space_user_update_doc).length > 0) {\n              db.space_users.update({\n                space: space_id,\n                user: user_id\n              }, {\n                $set: space_user_update_doc\n              });\n            }\n            if (space_user.invite_state === \"refused\" || space_user.invite_state === \"pending\") {\n              throw new Meteor.Error(400, \"该用户还未接受加入工作区，不能修改他的个人信息\");\n            } else {\n              if (item.password) {\n                return Accounts.setPassword(user_id, item.password, {\n                  logout: false\n                });\n              }\n            }\n          }\n        } else {\n          if (belongOrgids.length > 0) {\n            su_doc = {};\n            su_doc._id = db.space_users._makeNewID();\n            su_doc.space = space_id;\n            su_doc.user_accepted = true;\n            su_doc.invite_state = \"accepted\";\n            if (user) {\n              su_doc.user_accepted = false;\n              su_doc.invite_state = \"pending\";\n            }\n            su_doc.name = item.name;\n            if (item.email) {\n              su_doc.email = item.email;\n            }\n            su_doc.organization = belongOrgids[0];\n            su_doc.organizations = belongOrgids;\n            if (item.position) {\n              su_doc.position = item.position;\n            }\n            if (item.work_phone) {\n              su_doc.work_phone = item.work_phone;\n            }\n            if (item.phone) {\n              su_doc.mobile = item.phone;\n            }\n            if (item.sort_no) {\n              su_doc.sort_no = item.sort_no;\n            }\n            if (item.company) {\n              su_doc.company = item.company;\n            }\n            if (user_id) {\n              userInfo = db.users.findOne(user_id, {\n                fields: {\n                  username: 1\n                }\n              });\n              if (userInfo.username) {\n                su_doc.username = userInfo.username;\n              }\n              su_doc.user = user_id;\n            }\n            return db.space_users.insert(su_doc);\n          }\n        }\n      } catch (error1) {\n        e = error1;\n        error.line = i + 1;\n        error.message = e.reason;\n        return errorList.push(error);\n      }\n    });\n    return errorList;\n  }\n});\n","Meteor.startup ->\n\tWebApp.connectHandlers.use \"/api/export/space_users\", (req, res, next)->\n\t\ttry\n\t\t\tcurrent_user_info = uuflowManager.check_authorization(req)\n\n\t\t\tquery = req.query\n\t\t\tspace_id = query.space_id\n\t\t\torg_id = query.org_id\n\t\t\tuser_id = query['X-User-Id']\n\t\t\torg = db.organizations.findOne({_id:org_id},{fields:{fullname:1}})\n\t\t\tusers_to_xls = new Array\n\t\t\tnow = new Date \n\t\t\tif Steedos.isSpaceAdmin(space_id,user_id)\n\t\t\t\tusers_to_xls = db.space_users.find({\n\t\t\t\t\tspace: space_id\n\t\t\t\t}, {\n\t\t\t\t\tsort: {name: 1}\n\t\t\t\t}).fetch()\n\t\t\telse\n\t\t\t\torg_ids = []\n\t\t\t\torg_objs = db.organizations.find({_id:org_id,space:space_id},{fields:{_id:1,children:1}}).fetch()\n\t\t\t\torg_ids = _.pluck(org_objs,'_id')\n\t\t\t\t_.each org_objs,(org_obj)->\n\t\t\t\t\torg_ids = _.union(org_ids,org_obj?.children)\n\t\t\t\t_.uniq(org_ids)\n\t\t\t\tusers_to_xls = db.space_users.find({space:space_id,organizations:{$in:org_ids}},{sort: {sort_no: -1,name:1}}).fetch()\n\t\t\tejs = require('ejs')\n\t\t\tstr = Assets.getText('server/ejs/export_space_users.ejs')\n\t\t\t\n\t\t\t# 检测是否有语法错误\n\t\t\tejsLint = require('ejs-lint')\n\t\t\terror_obj = ejsLint.lint(str, {})\n\t\t\tif error_obj\n\t\t\t\tconsole.error \"===/api/contacts/export/space_users:\"\n\t\t\t\tconsole.error error_obj\n\n\t\t\ttemplate = ejs.compile(str)\n\n\t\t\tlang = 'en'\n\t\t\tif current_user_info.locale is 'zh-cn'\n\t\t\t\tlang = 'zh-CN'\n\n\t\t\torgName = if org then org.fullname else org_id\n\t\t\tfields = [{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'name',\n\t\t\t\t\twidth: 60,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_name',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'mobile',\n\t\t\t\t\twidth: 100,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_mobile',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'work_phone',\n\t\t\t\t\twidth: 100,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_work_phone',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'email',\n\t\t\t\t\twidth: 100,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_email',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'company',\n\t\t\t\t\twidth: 100,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_company',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'position',\n\t\t\t\t\twidth: 100,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_position',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'organizations',\n\t\t\t\t\twidth: 600,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_organizations',{},lang),\n\t\t\t\t\ttransform: (value)->\n\t\t\t\t\t\torgNames = db.organizations.find({_id: {$in: value}},{fields: {fullname: 1}}).map((item,index)->\n\t\t\t\t\t\t\treturn item.fullname\n\t\t\t\t\t\t)\n\t\t\t\t\t\treturn orgNames.join(\",\")\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'manager',\n\t\t\t\t\twidth: 60,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_manager',{},lang)\n\t\t\t\t\ttransform: (value)->\n\t\t\t\t\t\tuser = db.users.findOne({_id: value},{fields: {name: 1}})\n\t\t\t\t\t\treturn user?.name\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'user',\n\t\t\t\t\twidth: 60,\n\t\t\t\t\ttitle: TAPi18n.__('users_username',{},lang)\n\t\t\t\t\ttransform: (value)->\n\t\t\t\t\t\tuser = db.users.findOne({_id: value},{fields: {username: 1}})\n\t\t\t\t\t\treturn user?.username\n\t\t\t\t},{\n\t\t\t\t\ttype: 'Number',\n\t\t\t\t\tname:'sort_no',\n\t\t\t\t\twidth: 35,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_sort_no',{},lang)\n\t\t\t\t},{\n\t\t\t\t\ttype: 'String',\n\t\t\t\t\tname:'user_accepted',\n\t\t\t\t\twidth: 35,\n\t\t\t\t\ttitle: TAPi18n.__('space_users_user_accepted',{},lang)\n\t\t\t\t\ttransform: (value)->\n\t\t\t\t\t\treturn if value then TAPi18n.__('space_users_user_accepted_yes',{},lang) else TAPi18n.__('space_users_user_accepted_no',{},lang)\n\t\t\t\t}]\n\t\t\t\n\t\t\tsheet_name = orgName?.replace(/\\//g,\"-\") #不支持\"/\"符号\n\t\t\tret = template({\n\t\t\t\tlang: lang,\n\t\t\t\tsheet_name: sheet_name,\n\t\t\t\tfields: fields,\n\t\t\t\tusers_to_xls: users_to_xls\n\t\t\t})\n\n\t\t\tfileName = \"SteedOSContacts_\" + moment().format('YYYYMMDDHHmm') + \".xls\"\n\t\t\tres.setHeader(\"Content-type\", \"application/octet-stream\")\n\t\t\tres.setHeader(\"Content-Disposition\", \"attachment;filename=\"+encodeURI(fileName))\n\t\t\tres.end(ret)\n\t\tcatch e\n\t\t\tconsole.error e.stack\n\t\t\tres.end(e.message)","Meteor.startup(function() {\n  return WebApp.connectHandlers.use(\"/api/export/space_users\", function(req, res, next) {\n    var current_user_info, e, ejs, ejsLint, error_obj, fields, fileName, lang, now, org, orgName, org_id, org_ids, org_objs, query, ret, sheet_name, space_id, str, template, user_id, users_to_xls;\n    try {\n      current_user_info = uuflowManager.check_authorization(req);\n      query = req.query;\n      space_id = query.space_id;\n      org_id = query.org_id;\n      user_id = query['X-User-Id'];\n      org = db.organizations.findOne({\n        _id: org_id\n      }, {\n        fields: {\n          fullname: 1\n        }\n      });\n      users_to_xls = new Array;\n      now = new Date;\n      if (Steedos.isSpaceAdmin(space_id, user_id)) {\n        users_to_xls = db.space_users.find({\n          space: space_id\n        }, {\n          sort: {\n            name: 1\n          }\n        }).fetch();\n      } else {\n        org_ids = [];\n        org_objs = db.organizations.find({\n          _id: org_id,\n          space: space_id\n        }, {\n          fields: {\n            _id: 1,\n            children: 1\n          }\n        }).fetch();\n        org_ids = _.pluck(org_objs, '_id');\n        _.each(org_objs, function(org_obj) {\n          return org_ids = _.union(org_ids, org_obj != null ? org_obj.children : void 0);\n        });\n        _.uniq(org_ids);\n        users_to_xls = db.space_users.find({\n          space: space_id,\n          organizations: {\n            $in: org_ids\n          }\n        }, {\n          sort: {\n            sort_no: -1,\n            name: 1\n          }\n        }).fetch();\n      }\n      ejs = require('ejs');\n      str = Assets.getText('server/ejs/export_space_users.ejs');\n      ejsLint = require('ejs-lint');\n      error_obj = ejsLint.lint(str, {});\n      if (error_obj) {\n        console.error(\"===/api/contacts/export/space_users:\");\n        console.error(error_obj);\n      }\n      template = ejs.compile(str);\n      lang = 'en';\n      if (current_user_info.locale === 'zh-cn') {\n        lang = 'zh-CN';\n      }\n      orgName = org ? org.fullname : org_id;\n      fields = [\n        {\n          type: 'String',\n          name: 'name',\n          width: 60,\n          title: TAPi18n.__('space_users_name', {}, lang)\n        }, {\n          type: 'String',\n          name: 'mobile',\n          width: 100,\n          title: TAPi18n.__('space_users_mobile', {}, lang)\n        }, {\n          type: 'String',\n          name: 'work_phone',\n          width: 100,\n          title: TAPi18n.__('space_users_work_phone', {}, lang)\n        }, {\n          type: 'String',\n          name: 'email',\n          width: 100,\n          title: TAPi18n.__('space_users_email', {}, lang)\n        }, {\n          type: 'String',\n          name: 'company',\n          width: 100,\n          title: TAPi18n.__('space_users_company', {}, lang)\n        }, {\n          type: 'String',\n          name: 'position',\n          width: 100,\n          title: TAPi18n.__('space_users_position', {}, lang)\n        }, {\n          type: 'String',\n          name: 'organizations',\n          width: 600,\n          title: TAPi18n.__('space_users_organizations', {}, lang),\n          transform: function(value) {\n            var orgNames;\n            orgNames = db.organizations.find({\n              _id: {\n                $in: value\n              }\n            }, {\n              fields: {\n                fullname: 1\n              }\n            }).map(function(item, index) {\n              return item.fullname;\n            });\n            return orgNames.join(\",\");\n          }\n        }, {\n          type: 'String',\n          name: 'manager',\n          width: 60,\n          title: TAPi18n.__('space_users_manager', {}, lang),\n          transform: function(value) {\n            var user;\n            user = db.users.findOne({\n              _id: value\n            }, {\n              fields: {\n                name: 1\n              }\n            });\n            return user != null ? user.name : void 0;\n          }\n        }, {\n          type: 'String',\n          name: 'user',\n          width: 60,\n          title: TAPi18n.__('users_username', {}, lang),\n          transform: function(value) {\n            var user;\n            user = db.users.findOne({\n              _id: value\n            }, {\n              fields: {\n                username: 1\n              }\n            });\n            return user != null ? user.username : void 0;\n          }\n        }, {\n          type: 'Number',\n          name: 'sort_no',\n          width: 35,\n          title: TAPi18n.__('space_users_sort_no', {}, lang)\n        }, {\n          type: 'String',\n          name: 'user_accepted',\n          width: 35,\n          title: TAPi18n.__('space_users_user_accepted', {}, lang),\n          transform: function(value) {\n            if (value) {\n              return TAPi18n.__('space_users_user_accepted_yes', {}, lang);\n            } else {\n              return TAPi18n.__('space_users_user_accepted_no', {}, lang);\n            }\n          }\n        }\n      ];\n      sheet_name = orgName != null ? orgName.replace(/\\//g, \"-\") : void 0;\n      ret = template({\n        lang: lang,\n        sheet_name: sheet_name,\n        fields: fields,\n        users_to_xls: users_to_xls\n      });\n      fileName = \"SteedOSContacts_\" + moment().format('YYYYMMDDHHmm') + \".xls\";\n      res.setHeader(\"Content-type\", \"application/octet-stream\");\n      res.setHeader(\"Content-Disposition\", \"attachment;filename=\" + encodeURI(fileName));\n      return res.end(ret);\n    } catch (error) {\n      e = error;\n      console.error(e.stack);\n      return res.end(e.message);\n    }\n  });\n});\n"]}